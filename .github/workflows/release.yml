name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ubuntu-latest-go-1.23-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ubuntu-latest-go-1.23-

    - name: Run tests
      run: make test

    - name: Validate version tag
      run: |
        TAG="${{ steps.tag.outputs.tag }}"
        if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "❌ Invalid tag format: $TAG"
          echo "Expected format: v1.2.3 (semantic versioning)"
          exit 1
        fi
        echo "✓ Valid version tag: $TAG"

    - name: Check for CHANGELOG
      run: |
        if [ ! -f "CHANGELOG.md" ]; then
          echo "⚠️  Warning: CHANGELOG.md not found"
          echo "Consider creating a CHANGELOG.md file for better release documentation"
        else
          echo "✓ CHANGELOG.md found"
        fi

    - name: Get tag name
      id: tag
      run: |
        if [ -n "${{ github.event.inputs.tag }}" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Get commit hash
      id: commit
      run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        make cross-compile VERSION=${{ steps.tag.outputs.tag }} COMMIT_HASH=${{ steps.commit.outputs.hash }}

    - name: Generate and verify checksums
      run: make checksums verify-checksums

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: ${{ contains(steps.tag.outputs.tag, 'alpha') || contains(steps.tag.outputs.tag, 'beta') || contains(steps.tag.outputs.tag, 'rc') }}
        generate_release_notes: true
        files: |
          dist/no-reaction-*
          dist/checksums.txt

  homebrew:
    name: Generate Homebrew Formula
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate Homebrew formula
      run: |
        # Generate a proper Homebrew formula for multiple platforms
        cat > tracetrim.rb << EOF
        class TraceTrim < Formula
          desc "Clipboard Stack Trace Cleaner for JavaScript/React"
          homepage "https://github.com/rethunk-tech/tracetrim"
          version "${{ steps.tag.outputs.tag }}"

          if OS.mac? && Hardware::CPU.arm?
            url "https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/tracetrim-darwin-arm64"
            sha256 "$(curl -s https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/checksums.txt | grep darwin-arm64 | cut -d' ' -f1)"
          elsif OS.mac? && Hardware::CPU.intel?
            url "https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/tracetrim-darwin-amd64"
            sha256 "$(curl -s https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/checksums.txt | grep darwin-amd64 | cut -d' ' -f1)"
          elsif OS.linux? && Hardware::CPU.arm?
            url "https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/tracetrim-linux-arm64"
            sha256 "$(curl -s https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/checksums.txt | grep linux-arm64 | cut -d' ' -f1)"
          elsif OS.linux? && Hardware::CPU.intel?
            url "https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/tracetrim-linux-amd64"
            sha256 "$(curl -s https://github.com/rethunk-tech/tracetrim/releases/download/${{ steps.tag.outputs.tag }}/checksums.txt | grep linux-amd64 | cut -d' ' -f1)"
          end

          def install
            bin.install File.basename(url) => "tracetrim"
          end

          test do
            system "#{bin}/tracetrim", "--version"
          end
        end
        EOF

    - name: Upload Homebrew formula to release
      run: |
        gh release upload ${{ steps.tag.outputs.tag }} tracetrim.rb --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Output installation instructions
      run: |
        echo "## Installation Instructions"
        echo ""
        echo "Users can now install tracetrim using Homebrew with:"
        echo ""
        echo '```bash'
        echo "# Add this formula to your tap or create a local tap"
        echo "# Then install with:"
        echo "brew install tracetrim.rb"
        echo '```'
        echo ""
        echo "Or manually download from the release assets above."
        echo ""
        echo "Formula file available as release asset: tracetrim.rb"
