name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ubuntu-latest-go-1.23-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ubuntu-latest-go-1.23-

    - name: Run tests
      run: go test ./...

    - name: Get tag name
      id: tag
      run: |
        if [ -n "${{ github.event.inputs.tag }}" ]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Build binaries
      run: |
        mkdir -p dist/
        # Build for multiple platforms and architectures
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/no-reaction-windows-amd64.exe ./cmd
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o dist/no-reaction-windows-arm64.exe ./cmd
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/no-reaction-darwin-amd64 ./cmd
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/no-reaction-darwin-arm64 ./cmd
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/no-reaction-linux-amd64 ./cmd
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/no-reaction-linux-arm64 ./cmd

    - name: Generate checksums
      run: |
        cd dist/
        sha256sum * > checksums.txt

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: Release ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: ${{ contains(steps.tag.outputs.tag, 'alpha') || contains(steps.tag.outputs.tag, 'beta') || contains(steps.tag.outputs.tag, 'rc') }}

    - name: Upload binaries to release
      run: |
        for file in dist/*; do
          if [ -f "$file" ] && [ "$file" != "dist/checksums.txt" ]; then
            echo "Uploading $file"
            gh release upload ${{ steps.tag.outputs.tag }} "$file" --clobber
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload checksums to release
      run: |
        gh release upload ${{ steps.tag.outputs.tag }} dist/checksums.txt --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Update Homebrew formula
      run: |
        # This would typically involve updating a homebrew tap repository
        # For now, just create a basic formula that could be used
        cat > no-reaction.rb << EOF
        class NoReaction < Formula
          desc "Clipboard Stack Trace Cleaner for JavaScript/React"
          homepage "https://github.com/rethunk-tech/no-reaction"
          url "https://github.com/rethunk-tech/no-reaction/releases/download/${{ steps.tag.outputs.tag }}/no-reaction-darwin-amd64"
          sha256 "$(curl -s https://github.com/rethunk-tech/no-reaction/releases/download/${{ steps.tag.outputs.tag }}/checksums.txt | grep darwin-amd64 | cut -d' ' -f1)"
          version "${{ steps.tag.outputs.tag }}"

          def install
            bin.install "no-reaction-darwin-amd64" => "no-reaction"
          end

          test do
            system "#{bin}/no-reaction", "--help"
          end
        end
        EOF

    - name: Output Homebrew formula
      run: |
        echo "Homebrew formula created:"
        cat no-reaction.rb
